<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="stylesheet" href="/css/styles.css" />
    <title>Edit Product</title>
    <style>
      body {
        font-family: Arial, sans-serif;
        background-color: #f5f5f5;
        margin: 0;
        padding: 0;
      }

      header {
        background-color: #333;
        color: white;
        padding: 10px 20px;
        display: flex;
        justify-content: space-between;
        align-items: center;
      }

      header h1 {
        margin: 0;
      }

      header nav a {
        color: white;
        text-decoration: none;
        margin-left: 20px;
      }

      main {
        padding: 20px;
        max-width: 800px;
        margin: auto;
      }

      .form-container {
        background-color: white;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      }

      .form-container h2 {
        margin-top: 0;
      }

      .form-group {
        margin-bottom: 15px;
      }

      .form-group label {
        display: block;
        margin-bottom: 5px;
        font-weight: bold;
      }

      .form-group input,
      .form-group textarea {
        width: 100%;
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 4px;
      }

      .form-group textarea {
        resize: vertical;
      }

      .form-group button {
        background-color: #4caf50;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 4px;
        cursor: pointer;
        font-size: 16px;
      }

      .form-group button:hover {
        background-color: #45a049;
      }

      .popup-message {
        position: fixed;
        top: 20px;
        right: 20px;
        background-color: #333;
        color: white;
        padding: 15px;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        opacity: 0;
        visibility: hidden;
        transform: translateY(-20px);
        transition: opacity 0.3s ease, transform 0.3s ease, visibility 0.3s;
      }

      .popup-message.show {
        opacity: 1;
        visibility: visible;
        transform: translateY(0);
      }

      .popup-message.success {
        background-color: #4caf50;
      }

      .popup-message.error {
        background-color: #f44336;
      }
    </style>
  </head>
  <body>
    <header>
      <h1>Edit Product</h1>
      <nav>
        <a href="/admin/dashboard">Dashboard</a>
        <a href="#" id="logout">Logout</a>
      </nav>
    </header>

    <main>
      <div class="form-container">
        <h2>Product Details</h2>
        <form id="editProductForm">
          <div class="form-group">
            <label for="name">Name</label>
            <input type="text" id="name" name="name" required />
          </div>
          <div class="form-group">
            <label for="description">Description</label>
            <textarea
              id="description"
              name="description"
              rows="4"
              required
            ></textarea>
          </div>
          <div class="form-group">
            <label for="price">Price</label>
            <input type="number" id="price" name="price" step="0.01" required />
          </div>
          <div class="form-group">
            <label for="stock_quantity">Stock Quantity</label>
            <input
              type="number"
              id="stock_quantity"
              name="stock_quantity"
              required
            />
          </div>
          <div class="form-group">
            <label for="manufacturer">Manufacturer</label>
            <input type="text" id="manufacturer" name="manufacturer" required />
          </div>
          <div class="form-group">
            <label for="release_date">Release Date</label>
            <input type="date" id="release_date" name="release_date" required />
          </div>
          <div class="form-group">
            <label for="rating">Rating</label>
            <input
              type="number"
              id="rating"
              name="rating"
              step="0.1"
              min="0"
              max="5"
              required
            />
          </div>
          <div class="form-group">
            <label for="category">Category</label>
            <input type="text" id="category" name="category" required />
          </div>
          <div class="form-group">
            <button type="submit">Save Changes</button>
          </div>
        </form>
      </div>
    </main>

    <div id="popupMessage" class="popup-message"></div>

    <script>
      const token = localStorage.getItem("token");
      const productId = new URLSearchParams(window.location.search).get("id");

      if (!token) {
        window.location.href = "/login";
      }

      if (productId) {
        fetch(`/api/products/${productId}`, {
          method: "GET",
          headers: {
            Authorization: `Bearer ${token}`,
          },
        })
          .then((response) => {
            if (!response.ok) {
              if (response.status === 401) {
                window.location.href = "/login";
              } else {
                throw new Error(`HTTP error! Status: ${response.status}`);
              }
            }
            return response.json();
          })
          .then((data) => {
            if (data && data.length > 0) {
              const product = data[0];
              document.getElementById("name").value = product.name;
              document.getElementById("description").value =
                product.description;
              document.getElementById("price").value = product.price;
              document.getElementById("stock_quantity").value =
                product.stock_quantity;
              document.getElementById("manufacturer").value =
                product.manufacturer;

              // Extracting date part from ISO string
              const releaseDate = new Date(product.release_date);
              releaseDate.setDate(releaseDate.getDate() + 1);
              const formattedReleaseDate = releaseDate
                .toISOString()
                .split("T")[0];

              document.getElementById("release_date").value = formattedReleaseDate;

              document.getElementById("rating").value = product.rating;
              document.getElementById("category").value =
                product.category || ""; 
            } else {
              showMessage("Product not found.", "error");
            }
          })
          .catch((error) => {
            console.error("Error fetching product details:", error);
            showMessage("Error loading product details.", "error");
          });
      }

      const showMessage = (message, type = "success") => {
        const popupMessage = document.getElementById("popupMessage");
        popupMessage.textContent = message;
        popupMessage.className = `popup-message ${type}`;
        popupMessage.classList.add("show");

        setTimeout(() => {
          popupMessage.classList.remove("show");
        }, 3000);
      };

      document
        .getElementById("editProductForm")
        .addEventListener("submit", (event) => {
          event.preventDefault();

          const formData = new FormData(event.target);
          const data = {};
          formData.forEach((value, key) => {
            data[key] = value;
          });

          fetch(`/api/products/${productId}`, {
            method: "PUT",
            headers: {
              Authorization: `Bearer ${token}`,
              "Content-Type": "application/json",
            },
            body: JSON.stringify(data),
          })
            .then((response) => {
              if (!response.ok) {
                if (response.status === 401) {
                  window.location.href = "/login";
                } else {
                  throw new Error(`HTTP error! Status: ${response.status}`);
                }
              }
              return response.json();
            })
            .then(() => {
              showMessage("Product updated successfully.", "success");
              setTimeout(() => {
                window.location.href = "/product-overview";
              }, 2000);
            })
            .catch((error) => {
              console.error("Error:", error);
              showMessage("Error updating product.", "error");
            });
        });

      document.getElementById("logout").addEventListener("click", () => {
        localStorage.clear();
        window.location.href = "/login";
      });
    </script>
  </body>
</html>
